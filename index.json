{
  "api/CG.Seeding.html": {
    "href": "api/CG.Seeding.html",
    "title": "Namespace CG.Seeding",
    "keywords": "Namespace CG.Seeding Classes SeedDirectorBase<T> This class is a base implementation of the ISeedDirector interface. Interfaces ISeedDirector This interface represents an object that performs data seeding operations."
  },
  "api/CG.Seeding.ISeedDirector.html": {
    "href": "api/CG.Seeding.ISeedDirector.html",
    "title": "Interface ISeedDirector",
    "keywords": "Interface ISeedDirector This interface represents an object that performs data seeding operations. Namespace : CG.Seeding Assembly : CG.Seeding.dll Syntax public interface ISeedDirector Methods SeedAsync(Boolean, List<String>, String, CancellationToken) This method performs a seeding operation based on the content of the given object. Declaration Task SeedAsync(bool force, List<string> fileNames, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). List < System.String > fileNames The collection of JSON files to use for the operation. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation."
  },
  "api/CG.Seeding.Options.html": {
    "href": "api/CG.Seeding.Options.html",
    "title": "Namespace CG.Seeding.Options",
    "keywords": "Namespace CG.Seeding.Options Classes SeedingOptions This class contains configuration options related to data seeding."
  },
  "api/CG.Seeding.Options.SeedingOptions.html": {
    "href": "api/CG.Seeding.Options.SeedingOptions.html",
    "title": "Class SeedingOptions",
    "keywords": "Class SeedingOptions This class contains configuration options related to data seeding. Inheritance System.Object SeedingOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Seeding.Options Assembly : CG.Seeding.dll Syntax public class SeedingOptions Properties FileNames This property contains a list of external JSON file names, each one containing settings for a seeding operation. Declaration public List<string>? FileNames { get; set; } Property Value Type Description System.Nullable < List < System.String >> Force This property indicates whether to force the seeding operation, which has the effect of possibly seeding tables with existing data. Declaration public bool Force { get; set; } Property Value Type Description System.Boolean SeedOnStartup This property indicates whether to perform a data seeding operation on startup. Declaration public bool SeedOnStartup { get; set; } Property Value Type Description System.Boolean"
  },
  "api/CG.Seeding.SeedDirectorBase-1.html": {
    "href": "api/CG.Seeding.SeedDirectorBase-1.html",
    "title": "Class SeedDirectorBase<T>",
    "keywords": "Class SeedDirectorBase<T> This class is a base implementation of the ISeedDirector interface. Inheritance System.Object SeedDirectorBase<T> Implements ISeedDirector Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Seeding Assembly : CG.Seeding.dll Syntax public abstract class SeedDirectorBase<T> : ISeedDirector where T : SeedDirectorBase<T> Type Parameters Name Description T The associated concrete seed director class. Constructors SeedDirectorBase(ILogger<T>) This constructor creates a new instance of the SeedDirectorBase<T> class. Declaration protected SeedDirectorBase(ILogger<T> logger) Parameters Type Name Description ILogger <T> logger The logger to use with this director. Fields _logger This field contains the logger for this director. Declaration protected readonly ILogger<T> _logger Field Value Type Description ILogger <T> Methods SeedAsync(Boolean, List<String>, String, CancellationToken) This method performs a seeding operation based on the content of the given object. Declaration public virtual async Task SeedAsync(bool force, List<string> fileNames, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). List < System.String > fileNames The collection of JSON files to use for the operation. System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. SeedFromConfiguration(String, IConfiguration, Boolean, String, CancellationToken) This method should be overridden to seed the data from the given object. Declaration protected abstract Task SeedFromConfiguration(string objectName, IConfiguration dataSection, bool force, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String objectName The object(s) name, as read from the root element of the incoming JSON file. IConfiguration dataSection A object that contains an array of objects to use for the seeding operation. System.Boolean force true to force the seeding operation when data already exists in the associated table(s), false to stop the operation whenever data is detected in the associated table(s). System.String userName The user name of the person performing the operation. CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task A task to perform the operation. Implements ISeedDirector"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions",
    "keywords": "Class WebApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Seeding.dll Syntax public static class WebApplicationBuilderExtensions Methods AddSeeding<T>(WebApplicationBuilder, Action<SeedingOptions>, Nullable<ILogger>) This method adds directors and related services, for data seeding operations. Declaration public static WebApplicationBuilder AddSeeding<T>(this WebApplicationBuilder webApplicationBuilder, Action<SeedingOptions> optionsDelegate, ILogger? bootstrapLogger = null) where T : class, ISeedDirector Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. Action < SeedingOptions > optionsDelegate The delegate to use for configuring the data seeding operations. System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Type Parameters Name Description T The type of associated concrete seed director to use for the operation. AddSeeding<T>(WebApplicationBuilder, String, Nullable<ILogger>) This method adds directors and related services, for data seeding operations. Declaration public static WebApplicationBuilder AddSeeding<T>(this WebApplicationBuilder webApplicationBuilder, string sectionName = \"Seeding\", ILogger? bootstrapLogger = null) where T : class, ISeedDirector Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.String sectionName The configuration section to use for the operation. Defaults to Seeding . System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. Type Parameters Name Description T The type of associated concrete seed director to use for the operation."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationExtensions.html",
    "title": "Class WebApplicationExtensions",
    "keywords": "Class WebApplicationExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplication type. Inheritance System.Object WebApplicationExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Seeding.dll Syntax public static class WebApplicationExtensions Methods UseSeeding(WebApplication) This method performs startup operations for the data seeding subsystem. Declaration public static WebApplication UseSeeding(this WebApplication webApplication) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplication webApplication The web application to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplication The value of the webApplication parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Seeding.dll contains database seeding extensions used by other CodeGator packages."
  }
}